import { PostgreSql } from "ts-sql-query/databases/PostgreSql";
import { SelectValues } from "ts-sql-query/expressions/select";
import { PgPoolQueryRunner } from "ts-sql-query/queryRunners/PgPoolQueryRunner";
import { Table } from "ts-sql-query/Table";
import { dbPool } from "../../db/src/run_on_pool";
import { DBConnection, MyDb } from "./db";

class KreisverbandTable extends Table<MyDb> {
  id = this.autogeneratedPrimaryKey("id", "int");
  landesverbandId = this.column("landesverband_id", "int");
  name = this.column("name", "string");
  constructor() {
    super("kreisverband");
    this.forUseInLeftJoin();
  }
}

const kreisverbandTableInstance = new KreisverbandTable();

export interface Kreisverband {
  id: number;
  landesverbandId: number;
  name: string;
}

const selectKreisverband: SelectValues<
  MyDb & PostgreSql,
  KreisverbandTable,
  Kreisverband
> = {
  id: kreisverbandTableInstance.id,
  landesverbandId: kreisverbandTableInstance.landesverbandId,
  name: kreisverbandTableInstance.name,
};

export class KreisverbandDto {
  private static getConnection(): DBConnection {
    return new DBConnection(new PgPoolQueryRunner(dbPool));
  }

  public static findById(id: number): Promise<Kreisverband> {
    return this.getConnection()
      .selectFrom(kreisverbandTableInstance)
      .where(kreisverbandTableInstance.id.equals(id))
      .select(selectKreisverband)
      .executeSelectOne();
  }

  public static findAll(): Promise<Kreisverband[]> {
    return this.getConnection()
      .selectFrom(kreisverbandTableInstance)
      .where(kreisverbandTableInstance.id.isNotNull())
      .select(selectKreisverband)
      .executeSelectMany();
  }

  public static insert(
    kreisverband: Kreisverband
  ): Promise<Kreisverband["id"]> {
    return this.getConnection()
      .insertInto(kreisverbandTableInstance)
      .values(kreisverband)
      .returningLastInsertedId()
      .executeInsert();
  }
}
